import { useEffect, useState } from "react";

import Head from "next/head";
import AppBar from "@mui/material/AppBar";
import Box from "@mui/material/Box";
import Button from "@mui/material/Button";
import Container from "@mui/material/Container";
import Toolbar from "@mui/material/Toolbar";
import Typography from "@mui/material/Typography";

export default function Home() {
  const RANDOM_QUOTE_URL = "https://api.quotable.io/random";
  const [quoteData, setQuoteData] = useState({
    quote: "Quote here.",
    author: "Author here",
  });
  const [numOfQuotesFetched, setNumOfQuotesFetched] = useState(0);

  // load random quote
  // when it comes to effects, you want one thing in an effect
  useEffect(() => {
    getRandomQuote();
  }, []);

  // a second effect that's going to listen to quotes and add one to the number of quotes fetched and display it on the page
  useEffect(() => {
    console.log("listening to quote data changes");
    console.log(quoteData);
    // handle the "undefined" case of the quoteData
    if (!quoteData) {
      return;
    }

    // and add one to the number of quotes fetched and display on the page
    setNumOfQuotesFetched(numOfQuotesFetched + 1);
  }, [quoteData]);

  const getRandomQuote = async () => {
    const response = await fetch(RANDOM_QUOTE_URL);
    const data = await response.json();

    setQuoteData({
      quote: data.content,
      author: data.author,
    });

    // the promise method
    // fetch(RANDOM_QUOTE_URL)
    //   .then((response) => {
    //     return response.json();
    //   })
    //   .then((data) => {
    //     setQuoteData({
    //       quote: data.content,
    //       author: data.author,
    //     });
    //   });
  };

  // escape early if the quote data is undefined
  if (!quoteData) {
    return <h1>Loading...</h1>;
  }

  return (
    <div>
      <Head>
        <title>Our Quotes App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        <link
          rel="stylesheet"
          href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap"
        />
      </Head>
      <AppBar position="relative">
        <Toolbar>
          <Typography variant="h6" color="inherit" noWrap>
            Our Quotes App
          </Typography>
        </Toolbar>
      </AppBar>
      <main>
        <Container maxWidth="sm">
          <Box
            sx={{
              bgcolor: "background.paper",
              pt: 8,
              pb: 6,
            }}
          >
            <Typography
              variant="h5"
              align="center"
              color="text.primary"
              paragraph
            >
              {quoteData.quote}
            </Typography>
            <Typography
              component="h1"
              variant="h4"
              align="center"
              color="text.secondary"
              gutterBottom
            >
              {quoteData.author}
            </Typography>
            <Box display="flex" justifyContent="center">
              <Button variant="contained" onClick={getRandomQuote}>
                Get New Quote
              </Button>
            </Box>
            <Typography variant="p" align="center">
              You fetched
              {" " + numOfQuotesFetched + " "}
              in this session
            </Typography>
          </Box>
        </Container>
      </main>
    </div>
  );
}
